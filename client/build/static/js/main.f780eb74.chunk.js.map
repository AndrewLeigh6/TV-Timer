{"version":3,"sources":["components/UI/Input/Input.module.css","components/TimeCalculator/TimeCalculator.module.css","components/MediaDetails/MediaDetails.module.css","components/TimeCalculator/BreakInputBlock/BreakInputBlock.module.css","components/TimeCalculator/TimeInputBlock/TimeInputBlock.module.css","components/Layout/Layout.module.css","components/Logo/Logo.module.css","components/SearchBar/SearchBar.module.css","components/SearchResults/SearchResults.module.css","components/UI/Button/Button.module.css","components/Logo/Logo.js","components/Layout/Layout.js","components/UI/Button/Button.js","components/UI/Input/Input.js","components/SearchBar/SearchBar.js","components/MediaDetails/MediaDetails.js","helpers/helpers.js","components/SearchResults/SearchResults.js","components/MediaSelector/MediaSelector.js","api.js","components/TimeCalculator/TimeInputBlock/TimeInputBlock.js","components/TimeCalculator/BreakInputBlock/BreakInputBlock.js","components/TimeCalculator/TimeCalculator.js","components/FinalResult/FinalResult.js","containers/TvTimer/TvTimer.js","components/ErrorBoundary/ErrorBoundary.js","App.js","serviceWorker.js","index.js","components/FinalResult/FinalResult.module.css"],"names":["module","exports","Logo","className","classes","Layout","props","backdropURL","getBackdropBaseURL","backdropPath","useEffect","layout","document","querySelector","pathName","style","setProperty","children","Button","getClasses","buttonClasses","maxWidth","push","MaxWidth","type","Primary","Secondary","size","Small","Medium","Large","join","form","onClick","clicked","icon","Input","styles","class","Search","Time","Break","name","id","min","max","pattern","required","onChange","changed","value","placeholder","maxLength","SearchBar","onSubmit","searchHandler","MediaDetails","title","alt","poster","posterPath","getPosterBaseURL","year","releaseDate","slice","Poster","src","Title","buttonText","setEqualHeights","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","titles","querySelectorAll","largestHeight","forEach","element","clientHeight","height","setEqualTitleHeights","posters","setEqualPosterHeights","getTimeString","time","minutes","paddedMinutes","getMinutes","String","padStart","getHours","SearchResults","sortMedia","media","sort","a","b","release_date","generateMedia","map","key","poster_path","setCurrentMediaHandler","bind","window","addEventListener","Component","MediaSelector","api","axios","create","baseURL","interceptors","request","use","console","log","params","response","getConfig","get","findFilms","query","encodeURI","getFilmDetails","TimeInputBlock","verb","TimeInputContainer","BreakInputBlock","BreakLength","breakLength","breakLengthChanged","BreakNo","breakNum","breakNumChanged","withRouter","useState","currentMediaDetails","setCurrentMediaDetailsState","setBreakLengthState","setBreakNumState","currentMedia","history","mediaID","then","res","data","getTimeDate","chosenTime","chosenTimeHours","chosenTimeMinutes","chosenTimeDate","Date","setHours","setMinutes","TimeCalculator","BreakInputContainer","event","target","MediaDetailsContainer","setChosenStartTimeState","setCurrentCalculationType","startTime","runtime","chosenTimeString","setCalculatedEndTimeState","setChosenEndTimeState","endTime","setCalculatedStartTimeState","FinalResult","text","currentCalculationType","Fragment","ChosenTime","chosenEndTime","CalculatedTime","calculatedStartTime","chosenStartTime","calculatedEndTime","TvTimer","state","config","setState","loadNewMedia","results","chosenMedia","find","url","secure_base_url","poster_sizes","backdrop_sizes","preventDefault","searchValue","elements","images","catch","err","backdrop_path","location","pathname","path","exact","ErrorBoundary","hasError","errorMessage","to","error","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f780eb74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2Ggkr\",\"Search\":\"Input_Search__3DFFl\",\"Time\":\"Input_Time__3jAPB\",\"Break\":\"Input_Break__2eEin\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeCalculator\":\"TimeCalculator_TimeCalculator__37Aay\",\"BreakInputContainer\":\"TimeCalculator_BreakInputContainer__1AjjW\",\"MediaDetailsContainer\":\"TimeCalculator_MediaDetailsContainer__15sPd\",\"TimeInputContainer\":\"TimeCalculator_TimeInputContainer__2bahq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MediaDetails\":\"MediaDetails_MediaDetails__3XP2p\",\"Poster\":\"MediaDetails_Poster__18Cxw\",\"Title\":\"MediaDetails_Title__1N-p5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreakInputBlock\":\"BreakInputBlock_BreakInputBlock__3Nz_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeInputBlock\":\"TimeInputBlock_TimeInputBlock__1OvDW\",\"TimeInputContainer\":\"TimeInputBlock_TimeInputContainer__3G2Sx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1LMq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__13e8W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__3GNye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchResults\":\"SearchResults_SearchResults__1k8eR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2LtEj\",\"MaxWidth\":\"Button_MaxWidth__3T-fF\",\"Small\":\"Button_Small__1XZ4k\",\"Medium\":\"Button_Medium__3s-m3\",\"Large\":\"Button_Large__1DGGT\",\"Primary\":\"Button_Primary__2OfFy\",\"Secondary\":\"Button_Secondary__2T7uz\"};","import React from \"react\";\r\nimport classes from \"./Logo.module.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className={classes.Logo}>\r\n      <h1>TV Timer</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useEffect } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nconst Layout = props => {\r\n  const styles = {};\r\n  const backdropBaseURL = props.getBackdropBaseURL();\r\n  const backdropURL = backdropBaseURL + props.backdropPath;\r\n\r\n  /* set backdrop URL by updating css variable, \r\n    since we can't access ::after using js */\r\n  useEffect(() => {\r\n    const layout = document.querySelector(\".App > div\");\r\n\r\n    if (props.pathName === \"/result\") {\r\n      layout.style.setProperty(`--backdrop`, `url(${backdropURL})`);\r\n      layout.style.setProperty(`--backdrop-display`, `block`);\r\n    } else {\r\n      layout.style.setProperty(`--backdrop`, `none`);\r\n      layout.style.setProperty(`--backdrop-display`, `none`);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Layout} style={styles}>\r\n      <Logo />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = props => {\r\n  const getClasses = () => {\r\n    const buttonClasses = [classes.Button];\r\n\r\n    if (props.maxWidth) {\r\n      buttonClasses.push(classes.MaxWidth);\r\n    }\r\n\r\n    switch (props.type) {\r\n      case \"primary\":\r\n        buttonClasses.push(classes.Primary);\r\n        break;\r\n      case \"secondary\":\r\n        buttonClasses.push(classes.Secondary);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    switch (props.size) {\r\n      case \"small\":\r\n        buttonClasses.push(classes.Small);\r\n        break;\r\n      case \"medium\":\r\n        buttonClasses.push(classes.Medium);\r\n        break;\r\n      case \"large\":\r\n        buttonClasses.push(classes.Large);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return buttonClasses.join(\" \");\r\n  };\r\n\r\n  switch (props.form) {\r\n    case true:\r\n      return (\r\n        <button className={getClasses()} onClick={props.clicked}>\r\n          {props.children}\r\n        </button>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <div className={getClasses()} onClick={props.clicked}>\r\n          {props.icon} {props.children}\r\n        </div>\r\n      );\r\n  }\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"primary\", \"secondary\"]).isRequired,\r\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]).isRequired,\r\n  form: PropTypes.bool,\r\n  maxWidth: PropTypes.bool\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = props => {\r\n  const styles = [classes.Input];\r\n  let type = \"text\";\r\n\r\n  switch (props.class) {\r\n    case \"search\":\r\n      styles.push(classes.Search);\r\n      break;\r\n    case \"time\":\r\n      styles.push(classes.Time);\r\n      type = \"time\";\r\n      break;\r\n    case \"break\":\r\n      styles.push(classes.Break);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (props.class === \"time\") {\r\n    return (\r\n      <input\r\n        className={styles.join(\" \")}\r\n        type={type}\r\n        name={props.name}\r\n        id={props.name}\r\n        min=\"00:00\"\r\n        max=\"23:59\"\r\n        pattern=\"[0-9]{2}:[0-9]{2}\"\r\n        required={true}\r\n        onChange={props.changed}\r\n        value={props.value}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <input\r\n      className={styles.join(\" \")}\r\n      type={type}\r\n      name={props.name}\r\n      id={props.name}\r\n      placeholder={props.placeholder}\r\n      maxLength={props.maxLength}\r\n      onChange={props.changed}\r\n      value={props.value}\r\n    />\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  class: PropTypes.oneOf([\"search\", \"break\", \"time\"]).isRequired\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from \"./SearchBar.module.css\";\r\nimport Input from \"../UI/Input/Input\";\r\n\r\nconst SearchBar = props => {\r\n  return (\r\n    <div className={classes.SearchBar}>\r\n      <form onSubmit={props.searchHandler}>\r\n        <Input name=\"search\" class=\"search\" placeholder=\"e.g. Avengers\" />\r\n        <Button type=\"primary\" size=\"medium\" form>\r\n          Find\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./MediaDetails.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst MediaDetails = props => {\r\n  const PLACEHOLDER_POSTER_URL =\r\n    \"https://via.placeholder.com/500x750.png?text=No+poster+available\";\r\n\r\n  const title = props.title;\r\n  const alt = props.title;\r\n  const poster = props.posterPath\r\n    ? `${props.getPosterBaseURL()}/${props.posterPath}`\r\n    : PLACEHOLDER_POSTER_URL;\r\n\r\n  const year = props.releaseDate.slice(0, 4);\r\n\r\n  return (\r\n    <div className={classes.MediaDetails}>\r\n      <img className={classes.Poster} src={poster} alt={alt} />\r\n      <p className={classes.Title}>\r\n        {title} ({year})\r\n      </p>\r\n      <Button type=\"secondary\" size=\"small\" clicked={props.clicked}>\r\n        {props.buttonText}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nMediaDetails.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  releaseDate: PropTypes.string.isRequired,\r\n  buttonText: PropTypes.string.isRequired\r\n};\r\n\r\nexport default MediaDetails;\r\n","/* from https://davidwalsh.name/javascript-debounce-function \r\nstops a function from firing too many times */\r\nfunction debounce(func, wait, immediate) {\r\n  var timeout;\r\n  return function() {\r\n    var context = this,\r\n      args = arguments;\r\n    var later = function() {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    var callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}\r\n\r\nconst setEqualTitleHeights = () => {\r\n  const titles = document.querySelectorAll(\"p[class^=MediaDetails_Title]\");\r\n\r\n  let largestHeight = 0;\r\n\r\n  // get tallest title\r\n  titles.forEach(element => {\r\n    if (element.clientHeight > largestHeight) {\r\n      largestHeight = element.clientHeight;\r\n    }\r\n  });\r\n\r\n  // set all titles to largest height\r\n  titles.forEach(element => {\r\n    element.style.height = largestHeight + \"px\";\r\n  });\r\n};\r\n\r\nconst setEqualPosterHeights = () => {\r\n  const posters = document.querySelectorAll(\"[class^=MediaDetails_Poster]\");\r\n\r\n  let largestHeight = 0;\r\n\r\n  // get tallest poster\r\n  posters.forEach(element => {\r\n    if (element.height > largestHeight) {\r\n      largestHeight = element.height;\r\n    }\r\n  });\r\n\r\n  // set all posters to largest height\r\n  posters.forEach(element => {\r\n    element.style.height = largestHeight + \"px\";\r\n  });\r\n};\r\n\r\nexport const setEqualHeights = debounce(() => {\r\n  setEqualTitleHeights();\r\n  setEqualPosterHeights();\r\n}, 250);\r\n\r\n/* this looks absolutely hideous, but it's just so\r\n    we can get the getMinutes result to look like 01, 02,\r\n    etc instead of 1, 2. */\r\nconst padMinutes = minutes => {\r\n  const paddedMinutes = String(minutes).padStart(2, \"0\");\r\n\r\n  return paddedMinutes;\r\n};\r\n\r\nexport const getTimeString = time => {\r\n  const paddedMinutes = padMinutes(time.getMinutes());\r\n  const timeString = time.getHours() + \":\" + paddedMinutes;\r\n\r\n  return timeString;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport MediaDetails from \"../MediaDetails/MediaDetails\";\r\nimport classes from \"./SearchResults.module.css\";\r\nimport { setEqualHeights } from \"../../helpers/helpers\";\r\n\r\nclass SearchResults extends Component {\r\n  componentDidMount() {\r\n    setEqualHeights();\r\n\r\n    // ensure we set the heights again if the window is resized\r\n    window.addEventListener(\"resize\", setEqualHeights);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    setEqualHeights();\r\n  }\r\n\r\n  // sort by date descending\r\n  sortMedia = media => {\r\n    return media.sort(\r\n      (a, b) => b.release_date.slice(0, 4) - a.release_date.slice(0, 4)\r\n    );\r\n  };\r\n\r\n  generateMedia = media => {\r\n    return media.map(media => {\r\n      const BUTTON_TEXT = \"Watch this\";\r\n\r\n      return (\r\n        <MediaDetails\r\n          key={media.id}\r\n          title={media.title}\r\n          posterPath={media.poster_path}\r\n          releaseDate={media.release_date}\r\n          buttonText={BUTTON_TEXT}\r\n          clicked={this.props.setCurrentMediaHandler.bind(this, media.id)}\r\n          getPosterBaseURL={this.props.getPosterBaseURL}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const media = this.props.media\r\n      ? this.generateMedia(this.sortMedia(this.props.media))\r\n      : null;\r\n\r\n    return <div className={classes.SearchResults}>{media}</div>;\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\n\r\nconst MediaSelector = props => {\r\n  return (\r\n    <div>\r\n      <SearchBar searchHandler={props.searchHandler} />\r\n      <SearchResults\r\n        media={props.media}\r\n        getPosterBaseURL={props.getPosterBaseURL}\r\n        setCurrentMediaHandler={props.setCurrentMediaHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaSelector;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"/api/\"\r\n});\r\n\r\napi.interceptors.request.use(request => {\r\n  console.log(\"Starting Request\", request);\r\n  request.params = {\r\n    ...request.params\r\n  };\r\n  return request;\r\n});\r\n\r\napi.interceptors.response.use(response => {\r\n  console.log(\"Response:\", response);\r\n  return response;\r\n});\r\n\r\napi.getConfig = () => {\r\n  return api.get(\"/config\");\r\n};\r\n\r\napi.findFilms = query => {\r\n  return api.get(`/search/film?search=${encodeURI(query)}`);\r\n};\r\n\r\napi.getFilmDetails = id => {\r\n  return api.get(`/film/${id}`);\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport classes from \"./TimeInputBlock.module.css\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TimeInputBlock = props => {\r\n  let verb = null;\r\n\r\n  switch (props.type) {\r\n    case \"start\":\r\n      verb = \"start\";\r\n      break;\r\n    case \"end\":\r\n      verb = \"finish\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.TimeInputBlock}>\r\n      <p> I want to {verb} my film at:</p>\r\n      <div className={classes.TimeInputContainer}>\r\n        <Input\r\n          name=\"time-start\"\r\n          class=\"time\"\r\n          changed={props.changed}\r\n          value={props.time}\r\n        />\r\n        <Button type=\"primary\" size=\"small\" maxWidth clicked={props.clicked}>\r\n          Calculate\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTimeInputBlock.propTypes = {\r\n  type: PropTypes.oneOf([\"start\", \"end\"]).isRequired\r\n};\r\n\r\nexport default TimeInputBlock;\r\n","import React from \"react\";\r\nimport classes from \"./BreakInputBlock.module.css\";\r\nimport Input from \"../../UI/Input/Input\";\r\n\r\nconst BreakInputBlock = props => {\r\n  return (\r\n    <div className={classes.BreakInputBlock}>\r\n      <div className={classes.BreakLength}>\r\n        <p> Break length (mins)</p>\r\n        <Input\r\n          name=\"break-length\"\r\n          class=\"break\"\r\n          maxLength=\"2\"\r\n          value={props.breakLength}\r\n          changed={props.breakLengthChanged}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.BreakNo}>\r\n        <p> No. of breaks </p>\r\n        <Input\r\n          name=\"break-number\"\r\n          class=\"break\"\r\n          maxLength=\"2\"\r\n          value={props.breakNum}\r\n          changed={props.breakNumChanged}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BreakInputBlock;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./TimeCalculator.module.css\";\r\nimport MediaDetails from \"../MediaDetails/MediaDetails\";\r\nimport TimeInputBlock from \"./TimeInputBlock/TimeInputBlock\";\r\nimport BreakInputBlock from \"./BreakInputBlock/BreakInputBlock\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport api from \"../../api\";\r\nimport { getTimeString } from \"../../helpers/helpers\";\r\n\r\nconst TimeCalculator = props => {\r\n  const BUTTON_TEXT = \"Go back\";\r\n  const [currentMediaDetails, setCurrentMediaDetailsState] = useState(null);\r\n  const [breakLength, setBreakLengthState] = useState(\"5\");\r\n  const [breakNum, setBreakNumState] = useState(\"2\");\r\n\r\n  useEffect(() => {\r\n    if (props.currentMedia === null) {\r\n      props.history.push(\"/\");\r\n    } else {\r\n      const mediaID = props.currentMedia.id;\r\n\r\n      api\r\n        .getFilmDetails(mediaID)\r\n        .then(res => setCurrentMediaDetailsState(res.data));\r\n    }\r\n  }, [props.currentMedia, props.history]);\r\n\r\n  const setStartTimeHandler = event => {\r\n    const time = event.target.value;\r\n    props.setChosenStartTimeState(time);\r\n  };\r\n\r\n  const setEndTimeHandler = event => {\r\n    const time = event.target.value;\r\n    props.setChosenEndTimeState(time);\r\n  };\r\n\r\n  const setBreakLengthHandler = event => {\r\n    const breakLength = event.target.value;\r\n    setBreakLengthState(breakLength);\r\n  };\r\n\r\n  const setBreakNumHandler = event => {\r\n    const breakNum = event.target.value;\r\n    setBreakNumState(breakNum);\r\n  };\r\n\r\n  const getTimeDate = chosenTime => {\r\n    const chosenTimeHours = chosenTime.slice(0, 2);\r\n    const chosenTimeMinutes = chosenTime.slice(3);\r\n\r\n    const chosenTimeDate = new Date();\r\n    chosenTimeDate.setHours(chosenTimeHours);\r\n    chosenTimeDate.setMinutes(chosenTimeMinutes);\r\n\r\n    return chosenTimeDate;\r\n  };\r\n\r\n  const calcFromStartTime = () => {\r\n    props.setCurrentCalculationType(\"end\");\r\n    const chosenTime = getTimeDate(props.startTime);\r\n\r\n    chosenTime.setMinutes(\r\n      chosenTime.getMinutes() +\r\n        (currentMediaDetails.runtime + breakLength * breakNum)\r\n    );\r\n\r\n    const chosenTimeString = getTimeString(chosenTime);\r\n\r\n    //console.log(\"Your film will end at \", chosenTimeString);\r\n    props.setCalculatedEndTimeState(chosenTimeString);\r\n\r\n    props.history.push(\"/result\");\r\n  };\r\n\r\n  const calcFromEndTime = () => {\r\n    props.setCurrentCalculationType(\"start\");\r\n    const chosenTime = getTimeDate(props.endTime);\r\n\r\n    chosenTime.setMinutes(\r\n      chosenTime.getMinutes() -\r\n        (currentMediaDetails.runtime + breakLength * breakNum)\r\n    );\r\n\r\n    const chosenTimeString = getTimeString(chosenTime);\r\n\r\n    //console.log(\"You should start your film at \", chosenTimeString);\r\n    props.setCalculatedStartTimeState(chosenTimeString);\r\n\r\n    props.history.push(\"/result\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.TimeCalculator}>\r\n      <div className={classes.BreakInputContainer}>\r\n        <BreakInputBlock\r\n          breakLength={breakLength}\r\n          breakLengthChanged={setBreakLengthHandler}\r\n          breakNum={breakNum}\r\n          breakNumChanged={setBreakNumHandler}\r\n        />\r\n      </div>\r\n      <div className={classes.MediaDetailsContainer}>\r\n        <MediaDetails\r\n          title={props.currentMedia.title}\r\n          releaseDate={props.currentMedia.release_date}\r\n          posterPath={props.currentMedia.poster_path}\r\n          buttonText={BUTTON_TEXT}\r\n          getPosterBaseURL={props.getPosterBaseURL}\r\n          clicked={() => props.history.push(\"/\")}\r\n        />\r\n      </div>\r\n      <div className={classes.TimeInputContainer}>\r\n        <TimeInputBlock\r\n          type=\"start\"\r\n          changed={setStartTimeHandler}\r\n          clicked={calcFromStartTime}\r\n          time={props.startTime}\r\n        />\r\n        <hr />\r\n        <TimeInputBlock\r\n          type=\"end\"\r\n          changed={setEndTimeHandler}\r\n          clicked={calcFromEndTime}\r\n          time={props.endTime}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TimeCalculator);\r\n","import React from \"react\";\r\nimport classes from \"./FinalResult.module.css\";\r\n\r\nconst FinalResult = props => {\r\n  let text = \"\";\r\n\r\n  switch (props.currentCalculationType) {\r\n    case \"start\":\r\n      text = (\r\n        <React.Fragment>\r\n          <p>\r\n            To finish your film by\r\n            <span className={classes.ChosenTime}> {props.chosenEndTime}</span>,\r\n            start it at...\r\n          </p>\r\n          <p className={classes.CalculatedTime}> {props.calculatedStartTime}</p>\r\n        </React.Fragment>\r\n      );\r\n      break;\r\n    case \"end\":\r\n      text = (\r\n        <React.Fragment>\r\n          <p>\r\n            If you start your film at\r\n            <span className={classes.ChosenTime}> {props.chosenStartTime}</span>\r\n            , you'll finish it at...\r\n          </p>\r\n          <p className={classes.CalculatedTime}> {props.calculatedEndTime}</p>\r\n        </React.Fragment>\r\n      );\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div className={classes.FinalResult}>\r\n      {text}\r\n      <p>\r\n        Enjoy watching <span className={classes.Title}>{props.title}!</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalResult;\r\n","import React, { Component } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport MediaSelector from \"../../components/MediaSelector/MediaSelector\";\r\nimport api from \"../../api\";\r\nimport TimeCalculator from \"../../components/TimeCalculator/TimeCalculator\";\r\nimport FinalResult from \"../../components/FinalResult/FinalResult\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\n\r\nclass TvTimer extends Component {\r\n  state = {\r\n    config: null,\r\n    media: null,\r\n    currentMedia: null,\r\n    chosenStartTime: \"12:00\",\r\n    chosenEndTime: \"12:00\",\r\n    calculatedStartTime: null,\r\n    calculatedEndTime: null,\r\n    currentCalculationType: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    api.getConfig().then(config => {\r\n      this.setState({ config: config.data.images });\r\n    });\r\n\r\n    // temp for testing\r\n    api\r\n      .findFilms(\"avengers\")\r\n      .then(media => {\r\n        this.loadNewMedia(media);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  setChosenStartTimeState = startTime => {\r\n    this.setState({ chosenStartTime: startTime });\r\n  };\r\n\r\n  setChosenEndTimeState = endTime => {\r\n    this.setState({ chosenEndTime: endTime });\r\n  };\r\n\r\n  setCalculatedStartTimeState = startTime => {\r\n    this.setState({ calculatedStartTime: startTime });\r\n  };\r\n\r\n  setCalculatedEndTimeState = endTime => {\r\n    this.setState({ calculatedEndTime: endTime });\r\n  };\r\n\r\n  setCurrentCalculationType = type => {\r\n    this.setState({ currentCalculationType: type });\r\n  };\r\n\r\n  loadNewMedia = media => {\r\n    this.setState({ media: media.data.results });\r\n  };\r\n\r\n  setCurrentMediaHandler = mediaID => {\r\n    const chosenMedia = this.state.media.find(\r\n      element => element.id === mediaID\r\n    );\r\n\r\n    // need to wait until media has been set before redirecting\r\n    this.setState(\r\n      { currentMedia: chosenMedia },\r\n      this.props.history.push(\"/calculator\")\r\n    );\r\n  };\r\n\r\n  // https://developers.themoviedb.org/3/getting-started/images\r\n  getPosterBaseURL = () => {\r\n    if (this.state.config) {\r\n      const url = this.state.config.secure_base_url;\r\n      const size = this.state.config.poster_sizes[4]; // width 500\r\n      const posterURL = `${url}/${size}/`;\r\n\r\n      return posterURL;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  getBackdropBaseURL = () => {\r\n    if (this.state.config) {\r\n      const url = this.state.config.secure_base_url;\r\n      const size = this.state.config.backdrop_sizes[3]; // width original\r\n      const backdropURL = `${url}/${size}/`;\r\n\r\n      return backdropURL;\r\n    }\r\n  };\r\n\r\n  searchHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const searchValue = event.target.elements[0].value;\r\n\r\n    api.findFilms(searchValue).then(media => {\r\n      this.loadNewMedia(media);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const backdropPath = this.state.currentMedia\r\n      ? this.state.currentMedia.backdrop_path\r\n      : null;\r\n\r\n    const title = this.state.currentMedia\r\n      ? this.state.currentMedia.title\r\n      : null;\r\n\r\n    return (\r\n      <Layout\r\n        getBackdropBaseURL={this.getBackdropBaseURL}\r\n        backdropPath={backdropPath}\r\n        pathName={this.props.location.pathname}\r\n      >\r\n        <Route path=\"/\" exact>\r\n          <MediaSelector\r\n            searchHandler={this.searchHandler}\r\n            media={this.state.media}\r\n            getPosterBaseURL={this.getPosterBaseURL}\r\n            setCurrentMediaHandler={this.setCurrentMediaHandler}\r\n          />\r\n        </Route>\r\n        <Route path=\"/calculator\">\r\n          <TimeCalculator\r\n            currentMedia={this.state.currentMedia}\r\n            getPosterBaseURL={this.getPosterBaseURL}\r\n            startTime={this.state.chosenStartTime}\r\n            endTime={this.state.chosenEndTime}\r\n            setChosenStartTimeState={this.setChosenStartTimeState.bind(this)}\r\n            setChosenEndTimeState={this.setChosenEndTimeState.bind(this)}\r\n            setCalculatedEndTimeState={this.setCalculatedEndTimeState.bind(\r\n              this\r\n            )}\r\n            setCalculatedStartTimeState={this.setCalculatedStartTimeState.bind(\r\n              this\r\n            )}\r\n            setCurrentCalculationType={this.setCurrentCalculationType.bind(\r\n              this\r\n            )}\r\n          />\r\n        </Route>\r\n        <Route path=\"/result\">\r\n          <FinalResult\r\n            title={title}\r\n            chosenStartTime={this.state.chosenStartTime}\r\n            chosenEndTime={this.state.chosenEndTime}\r\n            calculatedStartTime={this.state.calculatedStartTime}\r\n            calculatedEndTime={this.state.calculatedEndTime}\r\n            currentCalculationType={this.state.currentCalculationType}\r\n          />\r\n        </Route>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TvTimer);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, errorMessage: error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\nimport TvTimer from \"./containers/TvTimer/TvTimer\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ErrorBoundary from \"./components/ErrorBoundary/ErrorBoundary\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ErrorBoundary>\n          <TvTimer />\n        </ErrorBoundary>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinalResult\":\"FinalResult_FinalResult__1i9bl\",\"ChosenTime\":\"FinalResult_ChosenTime__1OM6T\",\"CalculatedTime\":\"FinalResult_CalculatedTime__1N071\",\"Title\":\"FinalResult_Title__CVy_r\"};"],"sourceRoot":""}